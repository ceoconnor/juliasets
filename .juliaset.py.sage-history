"import cmath\nimport numpy as np\n\nclass JuliaSet:\n    def __init__(self, c, n = 100):\n        self.c = c\n        self.n = n\n        self._d = .001\n    \n    def juliamap(self, z):\n        return z ** 2 + self.c\n    \n    def iterate(self, z):\n        for m in np.arange(1, self.n+1):\n            z = self.juliamap(z)\n            if abs(z) > 2:\n                return m\n        return 0\n    \n    \n    def setcomplexplane(self, _d):\n        x, y = -2, -2\n        self._complexplane = []\n        while (x <= 2 and y <= 2):\n            z = complex(x,y)\n            self._complexplane.append(z)\n            x = self._d + x\n            y = self._d + y\n        \n    def set_spacing(self, d):\n        self._d = d\n        self.setcomplexplane(d)\n        \n    \n    def generate(self):\n        self.set = []\n        for i in self._complexplane:\n            self.set.append(self.iterate(i))\n        return self.set"
{"patch":[[[[0,"e(self, "],[-1,"_"],[0,"d):\n    "]],415,415,17,16]],"time":1443483741622}
{"patch":[[[[0,"d):\n"],[-1,"        self._d = d\n"],[0,"    "]],677,677,28,8],[[[0," return self.set"],[1,"\n        "]],862,862,16,25]],"time":1443475555389}
{"patch":[[[[0,"        "],[-1,"self."],[0,"setcompl"]],681,681,21,16],[[[0,"explane("],[1,"self, "],[0,"d)\n     "]],697,697,16,22],[[[0,"self.set"],[-1,"\n        "]],871,871,17,8]],"time":1443475454563}
{"patch":[[[[0,"explane(self"],[-1,", d"],[0,"):\n        x"]],409,409,27,24]],"time":1443475363257}
{"patch":[[[[0,"  se"],[-1,"tcomplexplane(self, d)\n        "],[1,"lf._d = d\n        self.setcomplexplane()"],[0,"\n   "]],684,684,39,48]],"time":1443475026890}
{"patch":[[[[0," 0\n    \n"],[-1,"    \n"],[0,"    def "]],380,380,21,16],[[[0," y\n        \n"],[1,"    \n"],[0,"    def set_"]],631,631,24,29],[[[0,"   self."],[-1,"_"],[0,"d = "],[1,"self._"],[0,"d\n      "]],683,683,21,26]],"time":1443474332541}
{"patch":[[[[0,"turn 0\n    \n"],[1,"    def set_spacing(self, d):\n        self._d = d\n        self.setcomplexplane()\n    \n"],[0,"    def setc"]],376,376,24,110],[[[0,"+ y\n"],[-1,"        \n    \n    def set_spacing(self, d):\n        self.d = self._d\n        self.setcomplexplane()\n"],[0,"    "]],716,716,108,8]],"time":1443472738424}
{"patch":[[[[0,"   \n"],[-1,"    def set_spacing(self, d):\n        self._d = d\n        self.setcomplexplane()\n    \n"],[0,"    "]],384,384,94,8],[[[0,"._d + y\n"],[1,"        \n    \n    def set_spacing(self, d):\n        self._d = d\n        self.setcomplexplane()\n"],[0,"    \n   "]],626,626,16,111]],"time":1443472609130}
{"patch":[[[[0,"lexplane(self):\n"],[1,"   \n"],[0,"        x, y = -"]],403,403,32,36]],"time":1443472551948}
{"patch":[[[[0,"lf):\n   "],[1,"     self._d = self._d"],[0,"\n       "]],414,414,16,38]],"time":1443472549945}
{"patch":[[[[0,"    "],[-1,"self._d = self._d"],[0,"\n   "]],423,423,25,8]],"time":1443472530063}
{"patch":[[[[0,"(self):\n"],[-1,"        \n"],[0,"        "]],411,411,25,16]],"time":1443472528720}
{"patch":[[[[0,"explane("],[1,"d"],[0,")\n    \n "]],719,719,16,17]],"time":1443472363239}
{"patch":[[[[0,"explane(self"],[1,", "],[0,"):\n        x"]],404,404,24,26]],"time":1443472361237}
{"patch":[[[[0,"e(self, "],[1,"d"],[0,"):\n     "]],410,410,16,17]],"time":1443472359199}
{"patch":[[[[0,"plane(self, "],[1,"_"],[0,"d):\n        "]],406,406,24,25]],"time":1443472310812}
{"patch":[[[[0,"explane("],[1,"_"],[0,"d)\n    \n"]],723,723,16,17]],"time":1443472302928}
{"patch":[[[[0,"explane("],[-1,"_"],[0,"d)\n    \n"]],723,723,17,16]],"time":1443472277217}
{"patch":[[[[0," 0\n    \n    "],[1," "],[0,"def setcompl"]],380,380,24,25]],"time":1443472246472}
{"patch":[[[[0," 0\n    \n"],[-1,"   "],[0,"  def se"]],380,380,19,16]],"time":1443472244903}
{"patch":[[[[0," 0\n    \n"],[1,"  "],[0,"  def se"]],380,380,16,18],[[[0,"self"],[-1,", _d"],[0,"):\n "]],412,412,12,8],[[[0,"explane("],[-1,"d"],[0,")\n    \n "]],719,719,17,16]],"time":1443472240448}
{"patch":[[[[0,"lf._d = "],[1,"self."],[0,"d\n      "]],688,688,16,21]],"time":1443471386483}
{"patch":[[[[0," = self."],[1,"_"],[0,"d\n      "]],693,693,16,17]],"time":1443471384476}
{"patch":[[[[0,"       self."],[-1,"_"],[0,"d = self._d\n"]],679,679,25,24]],"time":1443471382889}
{"patch":[[[[0,"lf.d = s"],[-1,"elf._"],[0,"d\n      "]],688,688,21,16]],"time":1443471291652}
{"patch":[[[[0,"elf.d = "],[-1,"s"],[0,"d\n      "]],687,687,17,16]],"time":1443471289653}
{"patch":[[[[0,"   self."],[1,"_"],[0,"d = d\n  "]],683,683,16,17]],"time":1443471287651}
{"patch":[[[[-1,"import cmath\nimport numpy as np\n\nclass JuliaSet:\n    def __init__(self, c, n = 100):\n        self.c = c\n        self.n = n\n        self._d = .001\n    \n    def juliamap(self, z):\n        return z ** 2 + self.c\n    \n    def iterate(self, z):\n        for m in np.arange(1, self.n+1):\n            z = self.juliamap(z)\n            if abs(z) > 2:\n                return m\n        return 0\n    \n    def setcomplexplane(self):\n        x, y = -2, -2\n        self._complexplane = []\n        while (x <= 2 and y <= 2):\n            z = complex(x,y)\n            self._complexplane.append(z)\n            x = self._d + x\n            y = self._d + y\n        \n    \n    def set_spacing(self, d):\n        self._d = d\n        self.setcomplexplane()\n    \n    def generate(self):\n        self.set = []\n        for i in self._complexplane:\n            self.set.append(self.iterate(i))\n        return self.set"]],0,0,885,0]],"time":1442982325706}